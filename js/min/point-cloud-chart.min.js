'use strict';class PointCloudChart{constructor(b,c){this.vertexSize=1;this.pointCloud=b;this.div=c}refreshViewportSize(){this.canvas.width=this.div.clientWidth;this.canvas.height=this.div.clientHeight;this.gl.viewport(0,0,this.canvas.width,this.canvas.height)}load(){this.canvas=document.createElement("canvas");this.canvas.style.transition="all 1s";this.div.appendChild(this.canvas);this.gl=this.canvas.getContext("webgl2");var b=[],c=[],a=this.pointCloud.getWidth(),e=this.pointCloud.getHeight();const g=
Math.round(e/2)*a;e=this.pointCloud.getAnglesZValues()[0][0];var d=this.pointCloud.getAnglesZValues()[0][0];for(let h=0;h<this.pointCloud.getAzimuthalAngles().length;h++)for(let k=0;k<a;k++){var f=k+g;f=this.pointCloud.getAnglesZValues()[h][f];if(!isNaN(f)){const l=2*(k/a-.5);e=Math.max(f,e);d=Math.min(f,d);b.push(l,f,0)}f=this.wheelColorFromAngle(this.pointCloud.getAzimuthalAngles()[h]);c.push(f.red,f.green,f.blue)}for(a=1;a<b.length;a+=3)b[a]+=Math.abs(d),b[a]/=e+Math.abs(d),b[a]*=2,--b[a];this.vertexCount=
b.length/3;a=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,a);this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(b),this.gl.STATIC_DRAW);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null);b=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,b);this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(c),this.gl.STATIC_DRAW);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null);e=["#version 300 es\n\nin vec3 coordinates;\nin vec3 v_color;\nout vec3 f_color;\n\nvoid main() {\n f_color = v_color;\n\n gl_Position = vec4(coordinates.x, coordinates.y, coordinates.z, 1.0);",
" gl_PointSize = "+GlslFloat.getJsNumberAsString(this.vertexSize)+";","}"].join("\n");c=this.gl.createShader(this.gl.VERTEX_SHADER);this.gl.shaderSource(c,e);this.gl.compileShader(c);d=["#version 300 es\nprecision mediump float;\n\nin vec3 f_color;\nout vec4 fragColor;\n\nvoid main() {"," fragColor = vec4(f_color, "+GlslFloat.getJsNumberAsString(1)+");","}"].join("\n");e=this.gl.createShader(this.gl.FRAGMENT_SHADER);this.gl.shaderSource(e,d);this.gl.compileShader(e);d=this.gl.createProgram();this.gl.attachShader(d,
c);this.gl.attachShader(d,e);this.gl.linkProgram(d);this.gl.useProgram(d);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,a);c=this.gl.getAttribLocation(d,"coordinates");this.gl.vertexAttribPointer(c,3,this.gl.FLOAT,!1,0,0);this.gl.enableVertexAttribArray(c);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,b);c=this.gl.getAttribLocation(d,"v_color");this.gl.vertexAttribPointer(c,3,this.gl.FLOAT,!1,0,0);this.gl.enableVertexAttribArray(c);this.gl.clearColor(0,0,0,0);this.gl.enable(this.gl.DEPTH_TEST);this.refreshViewportSize();
window.addEventListener("resize",this.refreshViewportSize.bind(this));this.render();uiLog("Graph rendered.")}render(){this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT);this.gl.drawArrays(this.gl.POINTS,0,this.vertexCount)}wheelColorFromAngle(b){var c=b/360;let a,e,g;b=Math.floor(6*c);var d=6*c-b;c=1-1*d;d=1-(1-d);switch(b%6){case 0:a=1;e=d;g=0;break;case 1:a=c;e=1;g=0;break;case 2:a=0;e=1;g=d;break;case 3:a=0;e=c;g=1;break;case 4:a=d;e=0;g=1;break;case 5:a=1,e=0,g=c}return{red:a,green:e,
blue:g}}};