'use strict';class PointCloudRenderer{constructor(a,b){this.vertexSize=2;this.rotationSpeed=.001;this.then=this.deltaTime=this.rotation=0;this.pointCloud=a;this.div=b;this.vertexCount=this.pointCloud.getGpuVertices().length/3}updateVertexColor(a){let b;switch(a){case "albedo":b=this.pointCloud.getGpuVertexAlbedoColors();uiLog("Updating vertex color to albedo.");break;case "normal_mapping":b=this.pointCloud.getGpuVertexNormalColors();uiLog("Updating vertex color to normal mapping.");break;case "error-proneness":b=
this.pointCloud.getGpuVertexErrorColors(),uiLog("Updating vertex color to error proneness.")}this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.vertexColorBuffer);this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(b),this.gl.STATIC_DRAW);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null)}initializeContext(){this.canvas=document.createElement("canvas");this.canvas.style.transition="all 1s";this.div.appendChild(this.canvas);this.gl=this.canvas.getContext("webgl2");var a=this.pointCloud.getGpuVertices(),
b=this.pointCloud.getGpuVertexAlbedoColors(),c=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,c);this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(a),this.gl.STATIC_DRAW);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null);this.vertexColorBuffer=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.vertexColorBuffer);this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(b),this.gl.STATIC_DRAW);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null);a=-90;IS_WEBCAM&&(a=-45);
a*=DEGREE_TO_RADIAN_FACTOR;a=["#version 300 es\n\nin vec3 coordinates;\nin vec3 v_color;\nuniform float rot;\nout vec3 f_color;\n\nvoid main() {\n f_color = v_color;\n\n float sinRotY = sin(rot);\n float cosRotY = cos(rot);\n "," float sinRotX = "+GlslFloat.getJsNumberAsString(Math.sin(a))+";"," float cosRotX = "+GlslFloat.getJsNumberAsString(Math.cos(a))+";"," \n mat3 yRot;\n yRot[0] = vec3(cosRotY, 0.0, sinRotY);\n yRot[1] = vec3(0.0, 1.0, 0.0);\n yRot[2] = vec3(-sinRotY, 0.0, cosRotY);\n \n mat3 xRot;\n xRot[0] = vec3(1.0, 0.0, 0.0);\n xRot[1] = vec3(0.0, cosRotX, -sinRotX);\n xRot[2] = vec3(0.0, sinRotX, cosRotX);\n vec3 pos = coordinates * xRot * yRot;\n gl_Position = vec4(pos.x *2.0, (pos.y + 0.5) *2.0, pos.z *2.0, 1.0);",
" gl_PointSize = "+GlslFloat.getJsNumberAsString(this.vertexSize)+";","}"].join("\n");b=this.gl.createShader(this.gl.VERTEX_SHADER);this.gl.shaderSource(b,a);this.gl.compileShader(b);let d=this.gl.createShader(this.gl.FRAGMENT_SHADER);this.gl.shaderSource(d,"#version 300 es\nprecision mediump float;\n\nin vec3 f_color;\nout vec4 fragColor;\n\nvoid main() {\n fragColor = vec4(f_color, 1.0);\n}");this.gl.compileShader(d);a=this.gl.createProgram();this.gl.attachShader(a,b);this.gl.attachShader(a,d);
this.gl.linkProgram(a);this.gl.useProgram(a);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,c);c=this.gl.getAttribLocation(a,"coordinates");this.gl.vertexAttribPointer(c,3,this.gl.FLOAT,!1,0,0);this.gl.enableVertexAttribArray(c);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.vertexColorBuffer);c=this.gl.getAttribLocation(a,"v_color");this.gl.vertexAttribPointer(c,3,this.gl.FLOAT,!1,0,0);this.gl.enableVertexAttribArray(c);this.rotationUniform=this.gl.getUniformLocation(a,"rot");this.gl.clearColor(0,0,0,0);
this.gl.enable(this.gl.DEPTH_TEST);this.refreshViewportSize();window.addEventListener("resize",this.refreshViewportSize.bind(this))}refreshViewportSize(){this.canvas.width>this.canvas.height?(this.canvas.width=this.div.clientHeight,this.canvas.height=this.div.clientHeight):(this.canvas.width=this.div.clientWidth,this.canvas.height=this.div.clientWidth);this.gl.viewport(0,0,this.canvas.width,this.canvas.height)}startRendering(){uiLog("Loading rendered point cloud preview.");this.initializeContext();
this.render(0)}render(a){a*=1.001;this.deltaTime=a-this.then;this.then=a;this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT);this.rotation+=this.deltaTime*this.rotationSpeed;this.gl.uniform1f(this.rotationUniform,this.rotation);this.gl.drawArrays(this.gl.POINTS,0,this.vertexCount);window.requestAnimationFrame(this.render.bind(this))}};